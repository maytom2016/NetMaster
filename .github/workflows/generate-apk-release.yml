name: Generated APK (Upload - Create Artifact To Github Action)

permissions:
  contents: write

env:
  main_project_module: app
  playstore_name: Feng

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      # Extract version from tag (remove 'v' prefix if exists)
      - name: Extract version from tag
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          VERSION=${VERSION#v}  # Remove 'v' prefix if present
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      # Update versionName in build.gradle.kts
      - name: Update version in build.gradle.kts
        run: |
          sed -i "s/versionName = \".*\"/versionName = \"${{ steps.extract_version.outputs.version }}\"/g" ${{ env.main_project_module }}/build.gradle.kts
          cat ${{ env.main_project_module }}/build.gradle.kts | grep versionName

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      - name: Run gradle tests
        run: ./gradlew test

      - name: Build gradle project
        run: ./gradlew build

      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assemble

      - name: Sign APK
        id: sign
        uses: ilharp/sign-android-release@nightly
        with:
          releaseDir: ${{ env.main_project_module }}/build/outputs/apk/release
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyAlias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          
      - name: ConfigOrganze
        id: organize_config
        run: |
          cd ${{ env.main_project_module }}/build/outputs/apk/
          mv ./release/app-release-unsigned-signed.apk ./release/app-release-signed.apk
          rm -rf ./release/app-release-un*
          rm -rf ./release/key.jks
          rm -rf ./release/output-metadata.json

      - name: Upload APK Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) release generated
          path: ${{ env.main_project_module }}/build/outputs/apk/release/
          
      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
             ${{ env.main_project_module }}/build/outputs/apk/release/app-release-signed.apk
