permissions:
  contents: write
name: Generated APK (Upload - Create Artifact To Github Action)

env:
  # The name of the main module repository
  main_project_module: app

  # The name of the Play Store
  playstore_name: Feng

on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Set Current Date As Env Variable
      - name: Set current date as env variable
        run: echo "date_today=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      # Set Repository Name As Env Variable
      - name: Set repository name as env variable
        run: echo "repository_name=$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')" >> $GITHUB_ENV

      # Extract tag name as version name
      - name: Extract tag name as version name
        run: echo "version_name=${GITHUB_REF##*/}" >> $GITHUB_ENV

      # Modify build.gradle.kts to set versionName
      - name: Modify build.gradle.kts to set versionName
        run: |
          VERSION_NAME=${{ env.version_name }}
          sed -i "s/versionName \".*\"/versionName \"$VERSION_NAME\"/" ${{ env.main_project_module }}/build.gradle.kts

      - name: Set Up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu' # See 'Supported distributions' for available options
          java-version: '17'
          cache: 'gradle'

      - name: Change wrapper permissions
        run: chmod +x ./gradlew

      # Run Tests Build
      - name: Run gradle tests
        run: ./gradlew test

      # Run Build Project
      - name: Build gradle project
        run: ./gradlew build

      # Create APK Release
      - name: Build apk release project (APK) - ${{ env.main_project_module }} module
        run: ./gradlew assemble

      - name: Sign APK
        id: sign
        uses: ilharp/sign-android-release@nightly
        with:
          releaseDir: ${{ env.main_project_module }}/build/outputs/apk/release
          signingKey: ${{ secrets.SIGNING_KEY }}
          keyAlias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: ConfigOrganze
        id: organize_config
        run: |
          cd ${{ env.main_project_module }}/build/outputs/apk/
          mv ./release/app-release-unsigned-signed.apk ./release/app-release-signed.apk
          rm -rf ./release/app-release-un*
          rm -rf ./release/key.jks
          rm -rf ./release/output-metadata.json
          tar -czvf  release.tar.gz ./release

      # Noted For Output [main_project_module]/build/outputs/apk/release/
      - name: Upload APK Release - ${{ env.repository_name }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.date_today }} - ${{ env.playstore_name }} - ${{ env.repository_name }} - APK(s) release generated
          path: ${{ env.main_project_module }}/build/outputs/apk/release/

      - name: Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version_name }}
          files: |
            ${{ env.main_project_module }}/build/outputs/apk/release.tar.gz
